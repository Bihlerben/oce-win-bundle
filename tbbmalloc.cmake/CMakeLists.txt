CMAKE_MINIMUM_REQUIRED(VERSION 2.8)

####### FREEIMAGE
PROJECT(tbbmalloc)

SET(CMAKE_DEBUG_POSTFIX "_debug")

IF(MSVC)
	ADD_DEFINITIONS("-D_CRT_SECURE_NO_DEPRECATE")
	ADD_DEFINITIONS("-D_CRT_NONSTDC_NO_WARNINGS")
	ADD_DEFINITIONS("-D_WINDLL")
	ENABLE_LANGUAGE(ASM_MASM)
ENDIF()

INCLUDE_DIRECTORIES(${TBB_DIR}/include)

IF(MSVC)
	INCLUDE_DIRECTORIES(${TBB_DIR}/build/vsproject)
ENDIF()

IF(WIN32)
	ADD_DEFINITIONS("-D__TBB_MALLOC_BUILD")
	SET(CMAKE_CXX_FLAGS_DEBUG "${CMAKE_CXX_FLAGS_DEBUG} -D__TBBMALLOC_BUILD -DTBB_USE_DEBUG -D__TBB_NO_IMPLICIT_LINKAGE")
	SET(CMAKE_CXX_FLAGS_RELEASE "${CMAKE_CXX_FLAGS_RELEASE} -D__TBBMALLOC_BUILD -D__TBB_NO_IMPLICIT_LINKAGE")
	SET(CMAKE_CXX_FLAGS_RELWITHDEBINFO "${CMAKE_CXX_FLAGS_RELWITHDEBINFO} -D__TBBMALLOC_BUILD -D__TBB_NO_IMPLICIT_LINKAGE")
	SET(CMAKE_CXX_FLAGS_MINSIZEREL "${CMAKE_CXX_FLAGS_MINSIZEREL} -D__TBBMALLOC_BUILD -D__TBB_NO_IMPLICIT_LINKAGE")
ENDIF()

IF(MSVC)
	SET(def_file ${CMAKE_CURRENT_BINARY_DIR}/tbbmalloc.def)
	IF(${BIT} EQUAL "32")
		SET(src_def ${TBB_DIR}/src/tbbmalloc/win32-tbbmalloc-export.def)
	ELSE()
		SET(src_def ${TBB_DIR}/src/tbbmalloc/win64-tbbmalloc-export.def)
	ENDIF()

	ADD_CUSTOM_COMMAND(COMMAND echo "Generating DEF file"
					COMMAND ${CMAKE_CXX_COMPILER} /nologo /TC /EP ${src_def} /I${TBB_DIR}/include /DTBB_USE_DEBUG /DDO_ITT_NOTIFY /DUSE_WINTHREAD /D_CRT_SECURE_NO_DEPRECATE /D_WIN32_WINNT=0x0400 >"${def_file}"
					DEPENDS ${src_def}
					OUTPUT ${def_file} )
ENDIF()



### TBB_MALLOC
FILE(GLOB src_files ${TBB_DIR}/src/tbbmalloc/backend.cpp ${TBB_DIR}/src/tbbmalloc/backref.cpp 
						   ${TBB_DIR}/src/tbbmalloc/frontend.cpp ${TBB_DIR}/src/tbbmalloc/itt_notify.cpp
						   ${TBB_DIR}/src/tbbmalloc/large_objects.cpp ${TBB_DIR}/src/tbbmalloc/tbbmalloc.cpp)

ADD_LIBRARY (tbbmalloc ${OCEBUNDLE_ADD_LIB_PREFIX} ${src_files} ${def_file} )

TARGET_LINK_LIBRARIES(tbbmalloc tbb)

# INSTALL
IF(OCEBUNDLE_AUTO_INSTALL)

	FILE(GLOB tbb_headers ${TBB_DIR}/include/*.h)
	
	INSTALL(FILES ${tbb_headers} DESTINATION ${OCEBUNDLE_INSTALL_DIR}/include/tbb)
	
	INSTALL(TARGETS tbbmalloc
			ARCHIVE DESTINATION  "${OCEBUNDLE_INSTALL_DIR_BITS}/lib/" CONFIGURATIONS Debug Release MinSizeRel RelWithDebInfo
			LIBRARY DESTINATION  "${OCEBUNDLE_INSTALL_DIR_BITS}/lib/" CONFIGURATIONS Debug Release MinSizeRel RelWithDebInfo
			RUNTIME DESTINATION  "${OCEBUNDLE_INSTALL_DIR_BITS}/bin/" CONFIGURATIONS Debug Release MinSizeRel RelWithDebInfo
			)
	
ENDIF()
